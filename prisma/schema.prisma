datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model SocialConnection {
  id                       String         @id @default(uuid())
  createdAt                DateTime       @default(now())
  updatedAt                DateTime       @updatedAt
  provider                 SocialProvider
  providerEmail            String
  providerUsername         String
  providerUserId           String
  isRegistrationConnection Boolean
  user                     User           @relation("SocialConnection_user", fields: [userId], references: [id])
  userId                   String
}

model TokenCluster {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  accessToken  String   @unique
  refreshToken String   @unique
  user         User     @relation("TokenCluster_user", fields: [userId], references: [id])
  userId       String
}

model User {
  id                String             @id @default(uuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  username          String             @unique
  signupMethod      SignupMethod
  isVerified        Boolean
  email             String             @unique
  password          String?
  displayName       String?
  avatarUrl         String?
  DOB               DateTime?
  gender            Gender?
  location          String?
  url               String?
  bio               String?
  socialConnections SocialConnection[] @relation("SocialConnection_user")
  tokenClusters     TokenCluster[]     @relation("TokenCluster_user")
  followers         User[]             @relation("User_followers")
  following         User[]             @relation("User_followers")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum SignupMethod {
  EMAIL
  GOOGLE
  LINKEDIN
  GITHUB
}

enum SocialProvider {
  GOOGLE
  TWITTER
  GITHUB
}